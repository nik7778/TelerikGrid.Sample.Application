@using Kendo.Mvc.UI
@using Sample.Application.Entities

@model IEnumerable<Record>

@{
    ViewData["Title"] = "Grid Sample";
}

<form class="mainFilter" id="filters">
    <fieldset>
        <legend class="filter">Filters</legend>
        <div class="row" style="padding:15px 0px;">
            <div class="col-md-6" style="display: inline-block;">
                <div style="display: inline-block;">
                    <label style="display:inline-block; margin-left:25px;">Date Range:</label>
                    <div class="demo-section k-content wide" style="display: inline-block;">
                        @(Html.Kendo().DateRangePicker()
                        .Name("daterangepicker")
                        .Labels(false)
                        .HtmlAttributes(new { style = "width: 360", title = "daterangepicker" })
                        )
                    </div>
                </div>
            </div>
            <div class="col-md-6" style="text-align: center; display: inline-block;">
                <div style="display:inline-block;">
                    <ul class="fieldlist">
                        <li>
                            @(Html.Kendo().CheckBox()
                            .Name("eq1")
                            .Checked(false).Label("DNB Only"))
                        </li>
                    </ul>
                </div>
                <label style="display:inline-block; margin-left:25px;">Status:</label>
                <div class="demo-section k-content center" style="display:inline-block;">
                    @(Html.Kendo().ButtonGroup()
                           .Name("selectColor")
                           .Items(t =>
                           {
                               t.Add().Text("Red");
                               t.Add().Text("Yellow");
                               t.Add().Text("Green");
                           })
                     )
                </div>
                <label style="display:inline-block; margin-left:10px;">Staff:</label>
                <div class="demo-section k-content center" style="display:inline-block;">
                    @(Html.Kendo().DropDownList()
                      .Name("staff")
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .BindTo(ViewBag.Staff)
                      .HtmlAttributes(new { style = "max-width: 100px" })
                    )
                </div>
            </div>
        </div>
        <div class="row" style="padding:15px 0px;">
            <div class="col-md-9">
                <div class="demo-section k-content center" style="margin-left:25px;display:inline-block;width:700px;">
                    @(Html.Kendo().MultiSelect()
                        .Name("select")
                        //.Events(e => e.Change("selectChange"))
                        .AutoClose(false)
                        .Placeholder("Select a Client...")
                        .HtmlAttributes(new { style = "min-width: 400px" })
                        .BindTo(ViewBag.Clients)
                    )
                </div>
            </div>
            <div class="col-md-3">
                @(Html.Kendo().Button()
                    .Name("applyFilters")
                    .HtmlAttributes(new { type = "button", @class = "k-primary", style="float:left;" })
                    .Content("Apply filters"))
                @(Html.Kendo().Button()
                    .Name("clearFilters")
                    .HtmlAttributes(new { type = "button", @class = "k-primary", style="float:left; margin-left:10px;" })
                    .Content("Clear all filters"))
            </div>
        </div>
    </fieldset>
</form>

@(Html.Kendo().Grid<Record>()
    .Name("Grid1")
    .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(20)
                .ServerOperation(false)
                .Events(events => events.Error("error_handler"))
                .Read(read => read.Action("Record_Read", "Home"))
                .Update(read => read.Action("Record_Update", "Home"))
                //.Destroy(read => read.Action("Record_Destroy", "Home"))
    )
    .Events(events => events.Change("showDetails"))
    .ToolBar(toolbar =>
    {
        toolbar.Search();
        toolbar.Save();
        toolbar.Pdf();
    })
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Hidden(true);
        columns.Bound(p => p.Date).Format("{0: MM-dd-yyyy}").Width(90);
        columns.Bound(p => p.Day).Width(60);
        columns.Bound(p => p.Time).Width(70);
        columns.Bound(p => p.Client).Width(70);
        columns.Bound(p => p.Duration).Width(90);
        columns.Bound(p => p.DNB).Width(65);
        columns.Bound(p => p.Status).Width(70);
        columns.Bound(p => p.Memo).Width(300);
        columns.Bound(p => p.Staff).Width(65);
        //columns.Command(command => command.Destroy()).Width(80);
    })
    .Editable(editable => editable.Enabled(false))
    .Pageable(pager => pager.Refresh(true))
    .Navigatable()
    .Sortable()
    .Resizable(resize => resize.Columns(true))
    .Filterable(x => x.Enabled(true))
    .Groupable(x => x.Enabled(true))
    .Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Row))
    .Scrollable()
    //.ClientDetailTemplateId("template")
    .HtmlAttributes(new { style = "height:1200px;" })
)

<div class="row">
    <div class="col-md-6">
        <label style="font-weight:700;display:block;padding-top:40px;">Grid Settings:</label>
        <div style="display:inline-block;padding:10px 0;">
            <ul class="fieldlist" style="display:inline-block">
                <li>
                    @(Html.Kendo().CheckBox()
                    .Name("eq2")
                    .Checked(false).Label("Editable mode"))
                </li>
                <li>
                    @(Html.Kendo().CheckBox()
                    .Name("eq3")
                    .Checked(true).Label("Filterable mode"))
                </li>
            </ul>
            <ul class="fieldlist" style="display:inline-block">
                <li>
                    @(Html.Kendo().CheckBox()
                    .Name("eq4")
                    .Checked(true).Label("Groupable mode"))
                </li>
                <li>
                    @(Html.Kendo().CheckBox()
                    .Name("eq5")
                    .Checked(true).Label("Show toolbar buttons"))
                </li>
            </ul>
        </div>
    </div>
    <div class="col-md-6">
        <div id="rowDetails"></div>
    </div>
</div>

<script id="GridToolbarTemplate" type="text/x-kendo-template">
    <div class="refreshBtnContainer">
        <a id="btnRefresh" href="\\#" class="k-pager-refresh k-link k-button k-button-icon" title="Refresh"><span class="k-icon k-i-reload"></span></a>
    </div>
</script>

<script id="template" type="text/java">
    @(Html.Kendo().TabStrip()
      .Name("tabStrip_#=Date#_#=Time#")
      .SelectedIndex(0)
      .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
      .Items(items =>
      {
          items.Add().Text("Details").Content(
         "<div class='employee-details'>" +
             "<ul>" +
                 "<li><label>Date:</label>#= Date #</li>" +
                 "<li><label>Day:</label>#= Day #</li>" +
                 "<li><label>Time:</label>#= Time #</li>" +
                 "<li><label>Client:</label>#= Client #<li>" +
                 "<li><label>Duration:</label>#= Duration #<li>" +
                 "<li><label>DNB:</label>#= DNB #<li>" +
                 "<li><label>Status:</label>#= Status #<li>" +
                 "<li><label>Memo:</label>#= Memo #<li>" +
                 "<li><label>Staff:</label>#= Staff #<li>" +
             "</ul>" +
         "</div>"
     );
}).ToClientTemplate())
</script>

<script src="~/js/script.js?v=1.0.0.0.0.4"></script>

<script type="text/javascript">
showDetails = function (e) {
        var selected = $.map(this.select(), function (item) {
            return $(item).children().first().text();
        });

        $.ajax({
            type: 'GET',
            url: '@Url.Action("Details", "Home")',
            data: { id: selected[0] },
            dataType: 'html',
            success: function (data) {
                $('#rowDetails').html(data);
            },
            error: function (ex) {
            }
        });
    };
</script>
